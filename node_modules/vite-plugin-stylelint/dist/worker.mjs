import { workerData, parentPort } from 'node:worker_threads';
import debugWrap from 'debug';
import { P as PLUGIN_NAME, a as getFilter, i as initializeStylelint, l as lintFiles, s as shouldIgnoreModule } from './shared/vite-plugin-stylelint.fd6c96db.mjs';
import 'tty';
import '@rollup/pluginutils';

var _a;
const debug = debugWrap(`${PLUGIN_NAME}:worker`);
const options = workerData.options;
const filter = getFilter(options);
let stylelintInstance;
let formatter;
(async () => {
  debug(`Initialize Stylelint`);
  const result = await initializeStylelint(options);
  stylelintInstance = result.stylelintInstance;
  formatter = result.formatter;
  if (options.lintOnStart) {
    debug(`Lint on start`);
    lintFiles({
      files: options.include,
      stylelintInstance,
      formatter,
      options
    });
  }
})();
(_a = parentPort) == null ? void 0 : _a.on("message", async (files) => {
  debug(`==== message event ====`);
  debug(`message: ${files}`);
  const shouldIgnore = await shouldIgnoreModule(files, filter, options.chokidar);
  debug(`should ignore: ${shouldIgnore}`);
  if (shouldIgnore)
    return;
  lintFiles({
    files: options.lintDirtyOnly ? files : options.include,
    stylelintInstance,
    formatter,
    options
  });
});
